##################################
#encoding=utf8                   #
#version =py27, py33             #
#author  =sanhe                  #
#date    =2014-10-29             #
#                                #
#    (\ (\                       #
#    ( -.-)o    I am a Rabbit!   #
#    o_(")(")                    #
#                                #
##################################

=======================
第一部分，初步了解python
=======================
这部分涵盖了所有的低级语言，高级语言，动态语言，静态语言，面向对象语言，函数式语言
所共有的内容。无论你是从其他语言转过来还是零基础学习编程，都需要掌握以下内容

	基本数据
	--------
		int		整数
			- 二进制, 八进制, 十六进制
		float	浮点数
		str		字符串
		boolean	真假值
		
	基本运算符
	-------------
		数学运算符
			+ 加法
			- 减法
			* 乘法
			/ 除法
			% 余数
			**乘方

		逻辑运算
			and	与
			or	或
			not	非
		
		位运算
			&,  位与
			|,  位或
			~,  位取反
			^,	位异或
			<<, 左移
			>>,	右移
			
		比较运算
			>		大于
			<		小于
			>=		大于等于
			<=		小于等于
			==,is	等于
			!=		不等于
		
	基本数据结构, 特性, 方法
	-----------------------
		str
			|--- split, replace, join, len(str)
			|--- 其他方法
			|--- immutable 特性
			
		list
			|--- 加元素, 删元素, slice操作, 加法, 乘法, 排序操作, 洗牌操作, in操作, len(list)
			|--- 其他方法
			|--- mutable 特性
			
		tuple
			|--- slice操作, in操作, len(tuple)
			|--- 其他方法
			|--- immutable 特性
			
		set
			|--- 加元素操作, 删元素, union, intersect, differencem in操作, len(tuple)
			|--- 其他方法
			|--- mutable 特性
			
		dict
			|--- 加key:value, 删key:value, get, setdefault
			|--- 其他方法
			|--- mutable 特性
	
	命令行交互
	----------
		print	输出
		input/raw_input console输入
	
	循环
	----
		for loop
		while loop
		break, continue
		
	条件判断
	-------
		if, elif, else
	
	
	函数
	----
		def, return
		
	异常控制
	--------
		try, except, else 基本用法
		raise


=========================
第二部分，进一步了解python
=========================
这部分学习了一些很有python特点的内容

	面向对象
	--------
		类， 属性， 方法
		类继承
		基本数据类型，函数，类，在python中一切皆对象
	
	调用包
	------
		import A, from A import B as C, from A import *
		python中调用包的机制
		
	文件的读写
	----------
		open, with open(A) as B:
		读写模式 rb, r, wb, w, a, r+
		file object
		
	字符串进阶
	----------
		格式字符串
		字符串的拼接
		字符串的相关方法，切片操作
		
	字符串进阶之正则表达式re
	-----------------------
		re.find_all
		re.compile
		
	列表进阶
	--------
		列表的性能分析
		
	集合进阶
	--------
		集合的性能分析
		
	字典进阶
	--------
		字典的性能分析
		
	List Comprehensions
	-------------------
		列表推导简洁表达式
	
	异常进阶
	--------
		Customize Exception
		
	复习 
	----
		阅读以下材料，规范编码习惯
			google python lanuage rules
			google python style guide
			
			
===========================
第三部分，开始用python做事情
===========================
Python之所以具有强大，快速的解决实际问题的能力，很大程度上是因为python自带的
强大的标准库(standard library)。所以我们需要了解
	1. 有哪些标准库，都用来干什么的
	2. 做哪些事情需要用哪些标准库来做
	
这个学习过程是通过大量阅读官方文档获得的
	https://docs.python.org/2/library/index.html
	https://docs.python.org/3/library/index.html
	

===========================
第四部分，深入了解python底层
===========================
	
	底层性能鸡汤
	-----------
		iterator
		
		collections (advance)
		
		IO buffer
		
	面向对象深入理解
	---------------
	
	如何创建自己的package
	--------------------

========================
第五部分，选择要努力的方向
========================

	

	
